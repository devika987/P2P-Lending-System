{"ast":null,"code":"import _regeneratorRuntime from \"/home/devika/FinalYear/blockchain/loanBCT/Blockchain-Simple-Loan-IOU-Application/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devika/FinalYear/blockchain/loanBCT/Blockchain-Simple-Loan-IOU-Application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n//import Web3 from \"web3\";\nvar Web3 = require('web3'); // Wait for loading completion to avoid race conditions with web3 injection timing.\n\n\nwindow.addEventListener(\"load\",\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 12;\n            break;\n          }\n\n          window.web3 = new Web3(ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return ethereum.enable();\n\n        case 5:\n          // Acccounts now exposed\n          web3.eth.getAccounts(function (err, accs) {\n            wtoE = web3.toWei(1, 'ether');\n            console.warn(\"accs[0] is \" + accs[0]);\n            account = accs[0];\n            console.warn(\"heeloo\" + account);\n          });\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 10:\n          _context.next = 13;\n          break;\n\n        case 12:\n          // Legacy dapp browsers...\n          if (window.web3) {\n            window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n            web3.eth.getAccounts(function (err, accs) {\n              wtoE = web3.toWei(1, 'ether');\n              console.warn(\"accs[0] is \" + accs[0]);\n              account = accs[0];\n              console.warn(\"heeloo\" + account);\n            });\n          } // Non-dapp browsers...\n          else {\n              console.warn('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this, [[2, 8]]);\n})));\nexport default getWeb3;","map":{"version":3,"sources":["/home/devika/FinalYear/blockchain/loanBCT/Blockchain-Simple-Loan-IOU-Application/client/src/utils/getWeb3.js"],"names":["Web3","require","window","addEventListener","ethereum","web3","enable","eth","getAccounts","err","accs","wtoE","toWei","console","warn","account","currentProvider","getWeb3"],"mappings":";;;AAAA;AACA,IAAMA,IAAI,GAACC,OAAO,CAAC,MAAD,CAAlB,C,CAEQ;;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB;AAAA;AAAA;AAAA;AAAA,yBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAExBD,MAAM,CAACE,QAFiB;AAAA;AAAA;AAAA;;AAGxBF,UAAAA,MAAM,CAACG,IAAP,GAAc,IAAIL,IAAJ,CAASI,QAAT,CAAd;AAHwB;AAAA;AAAA,iBAMdA,QAAQ,CAACE,MAAT,EANc;;AAAA;AAOpB;AACAD,UAAAA,IAAI,CAACE,GAAL,CAASC,WAAT,CAAqB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACvCC,YAAAA,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAa,OAAb,CAAP;AACAC,YAAAA,OAAO,CAACC,IAAR,CAAa,gBAAcJ,IAAI,CAAC,CAAD,CAA/B;AACAK,YAAAA,OAAO,GAAGL,IAAI,CAAC,CAAD,CAAd;AACAG,YAAAA,OAAO,CAACC,IAAR,CAAa,WAASC,OAAtB;AAED,WAND;AARoB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmB1B;AACK,cAAIb,MAAM,CAACG,IAAX,EAAiB;AACpBH,YAAAA,MAAM,CAACG,IAAP,GAAc,IAAIL,IAAJ,CAASK,IAAI,CAACW,eAAd,CAAd,CADoB,CAEpB;;AACAX,YAAAA,IAAI,CAACE,GAAL,CAASC,WAAT,CAAqB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACvCC,cAAAA,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAa,OAAb,CAAP;AACAC,cAAAA,OAAO,CAACC,IAAR,CAAa,gBAAcJ,IAAI,CAAC,CAAD,CAA/B;AACAK,cAAAA,OAAO,GAAGL,IAAI,CAAC,CAAD,CAAd;AACAG,cAAAA,OAAO,CAACC,IAAR,CAAa,WAASC,OAAtB;AAED,aAND;AAOD,WAVI,CAWL;AAXK,eAYA;AACHF,cAAAA,OAAO,CAACC,IAAR,CAAa,qEAAb;AACD;;AAlCyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAuCJ,eAAeG,OAAf","sourcesContent":["//import Web3 from \"web3\";\nconst Web3=require('web3');\n\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\n        window.addEventListener(\"load\", async() => {\n            // Moder dapp browers\n            if (window.ethereum) {\n                window.web3 = new Web3(ethereum);\n                try {\n                    // Request account access if needed\n                    await ethereum.enable();\n                    // Acccounts now exposed\n                    web3.eth.getAccounts(function(err, accs) {\n                      wtoE = web3.toWei(1,'ether');\n                      console.warn(\"accs[0] is \"+accs[0]);\n                      account = accs[0];\n                      console.warn(\"heeloo\"+account);\n                     \n                    });\n                } catch (error) {\n                    // User denied account access...\n                }\n              }\n              // Legacy dapp browsers...\n              else if (window.web3) {\n                window.web3 = new Web3(web3.currentProvider);\n                // Acccounts always exposed\n                web3.eth.getAccounts(function(err, accs) {\n                  wtoE = web3.toWei(1,'ether');\n                  console.warn(\"accs[0] is \"+accs[0]);\n                  account = accs[0];\n                  console.warn(\"heeloo\"+account);\n                  \n                });\n              }\n              // Non-dapp browsers...\n              else {\n                console.warn('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n              });\n              \n\n\n    export default getWeb3;\n    "]},"metadata":{},"sourceType":"module"}